@use '@angular/material' as mat;

@mixin component-colors($theme) {
  $accent: map-get($theme, accent);
  $primary: map-get($theme, primary);
  $warn: map-get($theme, warn);

  mat-chip-option[color='accent'] {
    background-color: mat.get-color-from-palette($accent, 900) !important;
  }

  mat-chip-option:not([color='accent']) {
    background-color: mat.get-color-from-palette($primary, 900) !important;
  }

  .custom-select {
    label[matformfieldfloatinglabel] {
      color: mat.get-contrast-color-from-palette($primary, A700) !important;
    }

    span.mat-mdc-select-value-text {
      color: mat.get-contrast-color-from-palette($primary, A700) !important;
    }

    .mat-mdc-select-arrow {
      color: mat.get-color-from-palette($accent, 900) !important;
    }

    .mdc-notched-outline__leading, .mdc-notched-outline__notch, .mdc-notched-outline__trailing {
      border-color: mat.get-color-from-palette($accent, 900) !important;
    }
  }

  .custom-panel {
    background-color: mat.get-color-from-palette($primary, 800) !important;
    .mdc-list-item__primary-text {
      color: mat.get-contrast-color-from-palette($primary, A700) !important;
    }
  }

  mat-toolbar {
    background-color: mat.get-color-from-palette($accent, 900) !important;
    color: mat.get-color-from-palette($primary, 900) !important;
    button.mat-mdc-button.active {
      color: mat.get-color-from-palette($accent, 100) !important;
    }
  }

  app-root {
    background-color: mat.get-color-from-palette($primary, 900) !important;
    color: mat.get-color-from-palette($accent, 50) !important;
  }
}

:host {
  // noinspection CssInvalidPropertyValue
  height: 100dvh;
  display: flex;
  flex-direction: column;
  align-items: stretch;

  mat-toolbar {
    z-index: 1;
    margin-top: auto;
    justify-content: space-around
  }
}
